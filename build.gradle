buildscript {
  // ---- DEPENDENCIES ----
  // @formatter:off
  ext.buildConfig = [
      compileSdk              : 29,
      targetSdk               : 29,
      minSdk                  : 14,
      gradlePlugin            : '3.5.0'
  ]

  ext.versions = [
      kotlin                  : '1.3.50',
      appcompat               : '1.1.0',
      material                : '1.1.0-alpha10',
      preferences             : '1.1.0',
      constraintlayout        : '2.0.0-beta2',
      colorpicker             : '1.1.0',
      junit                   : '4.13-beta-3',
      mockito_kotlin          : '2.1.0',
      mockito_core            : '3.0.0'
  ]

  ext.deps = [
      'androidx': [
          'appCompat'         : "androidx.appcompat:appcompat:${versions.appcompat}",
          'constraintLayout'  : "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",
          'preferences'       : "androidx.preference:preference:${versions.preferences}"
      ],
      'kotlin': [
          'stdlib': [
              'jdk'           : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
          ]
      ],
      'material'              : "com.google.android.material:material:${versions.material}",
      'colorpicker'           : "com.jaredrummler:colorpicker:${versions.colorpicker}",
      'junit'                 : "junit:junit:${versions.junit}",
      'mockito': [
          'core'              : "org.mockito:mockito-core:${versions.mockito_core}",
          'kotlin'            : "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
      ]
  ]
  // @formatter:on

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:${buildConfig.gradlePlugin}"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { details ->
        if (details.requested.group == 'org.jetbrains.kotlin') {
          details.useVersion versions.kotlin
        }
      }
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
      allWarningsAsErrors = true
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
